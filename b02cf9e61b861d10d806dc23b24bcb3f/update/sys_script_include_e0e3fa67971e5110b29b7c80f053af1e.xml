<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_slackerbot.Privacy</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Privacy API</description>
        <name>Privacy</name>
        <script><![CDATA[var Privacy = Class.create();
Privacy.prototype = {
    initialize: function(grChat) {
        this._init(grChat);
    },
    parse: function() {
        return this._parse();
    },

    _init: function(grChat) {
        this.grChat = grChat;
        var regex = /^(!1984|!privacy)/;
        this.objChat = {
            'channel': grChat.getValue('channel') || '',
            'text': grChat.getValue('text').replace(regex, '').trim() || '',
            'thread_ts': grChat.getValue('thread_ts') || '',
            'ts': grChat.getValue('ts') || '',
            'user': grChat.getValue('user') || '',
        };
        this.grUser = grChat.user.getRefRecord();
    },

    _getCount: function() {
        var gaChat = new GlideAggregate('x_snc_slackerbot_chat');
        gaChat.addQuery('user', this.grUser.getUniqueValue());
        gaChat.addAggregate('COUNT');
        gaChat.query();
        gaChat.next();
        var numCount = gaChat.getAggregate('COUNT') || 0;
        return numCount;
    },
    _getCountWords: function() {
		var strResult = '';
        var grChat = new GlideRecord('x_snc_slackerbot_chat');
        grChat.addQuery('user', this.grUser.getUniqueValue());
        grChat.query();
        while(grChat.next()) {
			strResult = strResult.concat(' ', grChat.getValue('text'));
		}
		var arrWords = strResult.split(' ');
		var objWords = {};
		for (var iWord = 0; iWord < arrWords.length; iWord++ ) {
			var strWord = arrWords[iWord];
			objWords[strWord] = objWords[strWord] || 0;
			objWords[strWord]++;
		}
		arrWords = Object.keys(objWords);
		var strResult1 = '', strResult2 = '', strResult3 = '';
		var numScore1 = 0, numScore2 = 0, numScore3 = 0;
		var numScore = 0;
		for (iWord = 0; iWord < arrWords.length; iWord++ ) {
			strWord = arrWords[iWord] || '';
			numScore = objWords[strWord] || 0;
			if (numScore > numScore3 && numScore < numScore2) {
				numScore3 = numScore;
				strResult3 = strWord;
			}
			if (numScore > numScore2 && numScore < numScore1) {
				numScore2 = numScore;
				strResult2 = strWord;
			}
			if (numScore > numScore1) {
				numScore1 = numScore;
				strResult1 = strWord;
			}			
		}
		strResult = ':first_place_medal: ' + strResult1 + ' (' + numScore1 + '), :second_place_medal: ' + strResult2 + ' (' + numScore2 + '), :third_place_medal: ' + strResult3 + ' (' + numScore3 + ')';
		return strResult;
    },
    _getDateMin: function() {
        var gaChat = new GlideAggregate('x_snc_slackerbot_chat');
        gaChat.addQuery('user', this.grUser.getUniqueValue());
        gaChat.addAggregate('MIN', 'sys_created_on');
        gaChat.query();
        gaChat.next();
        var strDate = gaChat.getAggregate('MIN', 'sys_created_on') || '<N/A>';
        return strDate;
    },

    _getLog: function() {
        var Slacker = new x_snc_slackerbot.Slacker();
		Slacker.send_chat(this.grChat, ':eye: 1984 : SlackerBot Privacy Report incoming...', true);
        var numCount = this._getCount();
        Slacker.send_chat(this.grChat, 'Total chat files: ' + numCount, true);
        var strDateMin = this._getDateMin();
        Slacker.send_chat(this.grChat, ':rotating_light: First flagged up on the radar: ' + strDateMin, true);
        var strCountWords = this._getCountWords();
        Slacker.send_chat(this.grChat, 'Top 3 Words in your vocab: ' + strCountWords, true);	
		
		// Sign Out
		Slacker.send_chat(this.grChat, ':eye: 1984 : SlackerBot - Remember I am always watching...', true);
    },
    _getNotice: function() {
        var Slacker = new x_snc_slackerbot.Slacker();
		var strPrivacyNotice = gs.getProperty('x_snc_slackerbot.privacy.notice', 'TBC');
		Slacker.send_chat(this.grChat, strPrivacyNotice, true);
    },	
	// 

    _parse: function() {
        try {
			return this._getNotice();
        } catch (e) {
            gs.error("An error occured when SlackerBot tried to send a response back to Slack.\nError: " + e.name + ": " + e.message);
        }
    },


    type: 'Privacy'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>w.geek6</sys_created_by>
        <sys_created_on>2022-10-08 22:23:00</sys_created_on>
        <sys_id>e0e3fa67971e5110b29b7c80f053af1e</sys_id>
        <sys_name>Privacy</sys_name>
        <sys_package display_value="SlackerBot" source="x_snc_slackerbot">b02cf9e61b861d10d806dc23b24bcb3f</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="SlackerBot">b02cf9e61b861d10d806dc23b24bcb3f</sys_scope>
        <sys_update_name>sys_script_include_e0e3fa67971e5110b29b7c80f053af1e</sys_update_name>
    </sys_script_include>
</record_update>
